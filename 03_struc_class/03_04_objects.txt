============================== Step 2 ==============================
Стурктуру с матодами, конструкторами и деструктором называют _классом_

Экземпляр (значение) класса называется _объектом_

============================== Step 3 ==============================

Объекты в динамической памяти -- тоже через оператор new

// выделение памяти и создание объекта -- конструктор вызывается
IntArray * pa = new IntArray(10);

// Только выделение памяти -- конструктор не вызывается
IntArray * pb = 
	 (IntArray *) malloc(sizeof(IntArray));


// вызов деструктора и освобождение памяти
delete pa;

Операторы new [] и delete [] работают аналогично
// выделение памяти и создание 10 объектов
// (вызывает конструктор по умолчанию)
IntArray * pa = new IntArray[10];

// вызов деструкторов и освобождение памяти
delete [] pa;

============================== Step 5 ==============================
Placement new

// выделение памяти
void * p = myalloc(sizeof(IntArray));

// создание объекта по адресу p -- оператор new с размещением
IntArray * a = new (p) IntArray(10);

// явный вызов деструктора
a -> ~IntArray();

// освобождение памяти
myfree(p);

Проблемы с выравниванием (при компиляции на некоторых платформах)
char b[sizeof(IntArray)]; // массив на стеке! 
new (b) IntArray(20); // потенциальная проблема

